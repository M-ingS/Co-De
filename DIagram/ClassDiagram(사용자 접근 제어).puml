@startuml'로그인 및 회원가입 관련'MemberController o--> MemberServiceMemberController..>MemberFormMemberController..>MemberMemberController..>SignInRequestMemberForm..>MemberJpaMemberRepository..>MemberMemberRepository..>MemberMemberRepository <|.. JpaMemberRepositoryLoginService..>MemberLoginService o--> JpaMemberRepositoryMemberService..>SignInRequestMemberService..>MemberFormMemberService..>MemberMemberService o--> JpaMemberRepositoryclass LoginService {- MemberRepository memberRepository+ Member login(String,String)}class MemberForm {- String Login- String pw- String pwcheck- String nickname- String pnum- String certified+ Member toEntity()}class MemberService {- MemberRepository memberRepository+ Member signIn(SignInRequest)+ Member signUp(MemberForm)+ Member getMemberByLoginAndPw(String,String)- void validateDuplicateMember(Member)+ List<Member> findMembers()+ Optional<Member> findLoginId(String)}interface MemberRepository {~ Member save(Member)~ Optional<Member> findById(String)~ Optional<Member> findByName(String)~ List<Member> findAll()}class JpaMemberRepository {- EntityManager em+ Member save(Member)+ Optional<Member> findById(String)+ Optional<Member> findByName(String)+ List<Member> findAll()}class SignInRequest {- String signid- String signpw+ String getLogin()+ void setLogin(String)+ String getPw()+ void setPw(String)}class Member {- Long id- String Login- String pw- String pwcheck- String nickname- String pnum- String certified+ String getLoginId()+ void setId(Long)+ String getNickname()}class MemberController {- MemberService memberService+ {static} Hashtable sessionList+ String logout(HttpServletRequest)+ String SignIn(SignInRequest,HttpServletRequest)+ String create(MemberForm)+ String list(Model)+ Map<String,String> sessionList()}@enduml