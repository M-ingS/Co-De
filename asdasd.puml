@startuml
class ChatRoomController {
- ChatRepository chatRepository
+ String goChatRoom(Model)
+ String createRoom(String,String,String,String,RedirectAttributes)
+ String roomDetail(Model,String)
+ boolean confirmPwd(String,String)
+ String delChatRoom(String)
+ boolean chUserCnt(String)
}
class MemberController {
- MemberService memberService
+ {static} Hashtable sessionList
+ String logout(HttpServletRequest)
+ String SignIn(SignInRequest,HttpServletRequest)
+ String create(MemberForm)
+ String list(Model)
+ Map<String,String> sessionList()
}
class FileController {
- S3FileService fileService
+ FileUploadDto uploadFile(MultipartFile,String)
+ ResponseEntity<byte[]> download(String,String)
}
class MozipController {
- MozipService mozipService
- MemberService memberService
- SelectedValue sv
+ String list(Model,HttpServletRequest)
+ String sessionInfo(HttpServletRequest)
+ String createMozip1(MozipForm,HttpServletRequest)
+ String createMozip(String,String)
+ void create(MozipForm)
}
class ChatController {
- SimpMessageSendingOperations template
- ChatRepository chatRepository
+ void enterUser(ChatDTO,SimpMessageHeaderAccessor)
+ void sendMessage(ChatDTO)
+ void webSocketDisconnectListener(SessionDisconnectEvent)
+ ArrayList<String> userList(String)
+ String inDuplicateName(String,String)
}
class LoginController {
+ void addResourceHandlers(ResourceHandlerRegistry)
}


WebMvcConfigurer <|.. LoginController
@enduml