@startuml
class LoginService {
- MemberRepository memberRepository
+ Member login(String,String)
}

JpaMemberRepository..>MemberService
JpaMemberRepository

class MemberForm {
- String Login
- String pw
- String pwcheck
- String nickname
- String pnum
- String certified
+ Member toEntity()
}
class SpringConfig {
- EntityManager em
- AmazonS3 amazonS3
+ MemberService memberService()
+ MozipService mozipService()
+ FileService fileService()
+ MemberRepository memberRepository()
+ MozipRepository mozipRepository()
~ ChatRepository chatRepository()
+ void registerStompEndpoints(StompEndpointRegistry)
+ void configureMessageBroker(MessageBrokerRegistry)
}

class ChatRoomDto {
- String roomId
- String roomName
- long userCount
- int maxUserCnt
- String roomPwd
- boolean secretChk
- HashMap<String,String> userlist
}
class ChatRoomController {
- ChatRepository chatRepository
+ String goChatRoom(Model)
+ String createRoom(String,String,String,String,RedirectAttributes)
+ String roomDetail(Model,String)
+ boolean confirmPwd(String,String)
+ String delChatRoom(String)
+ boolean chUserCnt(String)
}
class MozipForm {
- String title
- Long distance_limit
- String categories
- String peoples
- LocalDateTime create_Date
- LocalDateTime modified_Date
- String nickname
+ void setCategories(String)
+ void setPeoples(String)
+ void setNickname(String)
+ Mozip toEntity()
}
class CodeBackendApplication {
+ {static} void main(String[])
}
interface FileService {
~ FileUploadDto uploadFile(MultipartFile,String,String)
~ void deleteFileDir(String)
~ File convertMultipartFileToFile(MultipartFile,String)
~ void removeFile(File)
~ ResponseEntity<byte[]> getObject(String,String)
}
class MemberService {
- MemberRepository memberRepository
+ Member signIn(SignInRequest)
+ Member signUp(MemberForm)
+ Member getMemberByLoginAndPw(String,String)
- void validateDuplicateMember(Member)
+ List<Member> findMembers()
+ Optional<Member> findLoginId(String)
}
interface MemberRepository {
~ Member save(Member)
~ Optional<Member> findById(String)
~ Optional<Member> findByName(String)
~ List<Member> findAll()
}
class FileUploadDto {
- MultipartFile file
- String originFileName
- String transaction
- String chatRoom
- String s3DataUrl
- String fileDir
}
class MemoryMemberRepository {
- {static} Map<String,Member> store
- {static} long sequence
+ Member save(Member)
+ Optional<Member> findById(String)
+ Optional<Member> findByName(String)
+ List<Member> findAll()
}
class MozipService {
- MozipRepository mozipRepository
- MemberRepository memberRepository
+ Mozip savePost(MozipForm)
+ String findNickName(String)
+ List<Mozip> getMozipList()
}
class ChatDTO {
- MessageTYpe type
- String roomId
- String sender
- String message
- String time
- String s3DataUrl
- String fileName
- String fileDir
}
enum MessageTYpe {
+  ENTER
+  LEAVE
+  TALK
}
class ChatRepository {
- Map<String,ChatRoomDto> chatRoomDtoMap
- void init()
+ List<ChatRoomDto> findAllRoom()
+ ChatRoomDto findRoomById(String)
+ ChatRoomDto createChatRoom(String,String,boolean,int)
+ void plusUserCnt(String)
+ void minusUserCnt(String)
+ String addUser(String,String)
+ String isDuplicateName(String,String)
+ void delUser(String,String)
+ String getUserName(String,String)
+ ArrayList<String> getUserList(String)
+ boolean chkRoomUserCnt(String)
+ boolean confirmPwd(String,String)
+ void delChatRoom(String)
}
class FileController {
- S3FileService fileService
+ FileUploadDto uploadFile(MultipartFile,String)
+ ResponseEntity<byte[]> download(String,String)
}
class MozipController {
- MozipService mozipService
- MemberService memberService
- SelectedValue sv
+ String list(Model,HttpServletRequest)
+ String sessionInfo(HttpServletRequest)
+ String createMozip1(MozipForm,HttpServletRequest)
+ String createMozip(String,String)
+ void create(MozipForm)
}
class JpaMemberRepository {
- EntityManager em
+ Member save(Member)
+ Optional<Member> findById(String)
+ Optional<Member> findByName(String)
+ List<Member> findAll()
}
class SignInRequest {
- String signid
- String signpw
+ String getLogin()
+ void setLogin(String)
+ String getPw()
+ void setPw(String)
}
class LoginController {
+ void addResourceHandlers(ResourceHandlerRegistry)
}
class Member {
- Long id
- String Login
- String pw
- String pwcheck
- String nickname
- String pnum
- String certified
+ String getLoginId()
+ void setId(Long)
+ String getNickname()
}
class Mozip {
- Long id
- String title
- Long distance_limit
- String categories
- String peoples
- LocalDateTime create_Date
- LocalDateTime modified_Date
- String nickname
}
class MemberController {
- MemberService memberService
+ {static} Hashtable sessionList
+ String logout(HttpServletRequest)
+ String SignIn(SignInRequest,HttpServletRequest)
+ String create(MemberForm)
+ String list(Model)
+ Map<String,String> sessionList()
}
interface MozipRepository {
~ Mozip save(Mozip)
~ Optional<Mozip> findById(Long)
~ Optional<Mozip> findByName(String)
~ List<Mozip> findAll()
}
class JpaMozipRepository {
- EntityManager em
+ Mozip save(Mozip)
+ Optional<Mozip> findById(Long)
+ Optional<Mozip> findByName(String)
+ List<Mozip> findAll()
}
class S3Config {
- String region
- String bucketName
- String accessKey
- String secretKey
+ AmazonS3 amazonS3()
}
class SelectedValue {
- {static} SelectedValue instance
- String selectedValue1
- String selectedValue2
- String nickname
+ String getSelectedValue1()
+ void setSelectedValue1(String)
+ String getSelectedValue2()
+ void setSelectedValue2(String)
+ String getNickname()
+ void setNickname(String)
+ {static} SelectedValue getInstance()
}
class ChatController {
- SimpMessageSendingOperations template
- ChatRepository chatRepository
+ void enterUser(ChatDTO,SimpMessageHeaderAccessor)
+ void sendMessage(ChatDTO)
+ void webSocketDisconnectListener(SessionDisconnectEvent)
+ ArrayList<String> userList(String)
+ String inDuplicateName(String,String)
}
class S3FileService {
- AmazonS3 amazonS3
- String bucket
- String baseUrl
+ FileUploadDto uploadFile(MultipartFile,String,String)
+ void deleteFileDir(String)
+ ResponseEntity<byte[]> getObject(String,String)
}


WebSocketMessageBrokerConfigurer <|.. SpringConfig
MemberRepository <|.. MemoryMemberRepository
MemberRepository <|.. JpaMemberRepository
WebMvcConfigurer <|.. LoginController
MozipRepository <|.. JpaMozipRepository
FileService <|.. S3FileService
@enduml